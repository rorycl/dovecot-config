# a minimal, insecure dovecot.conf suitable for running with the dovecot
# official docker image as described at
# https://doc.dovecot.org/main/installation/docker.html

# https://doc.dovecot.org/2.4.1/core/config/quick.html
dovecot_config_version = 2.4.0
dovecot_storage_version = 2.4.0

# enable desired protocols:
protocols {
  imap = yes
  # lmtp = yes
}

# network listening
listen = *, ::

# docker configuration (copied from default dovecot docker config)
default_internal_user = vmail
default_login_user = vmail
default_internal_group = vmail

# paths
mail_home = /srv/mail/%{user}
mail_driver = sdbox
mail_path = ~/mail

# alternative examples
# mail_path = /srv/vmail/%{user|username}/Mail
# mail_inbox_path = /srv/vmail/%{user|username}

mail_uid = vmail
mail_gid = vmail

# By default first_valid_uid is 500. If your vmail user's UID is smaller,
# you need to modify this:
#first_valid_uid = uid-number-of-vmail-user

namespace inbox {
  inbox = yes
  separator = /
}

# Authenticate as system users:
# passdb pam {
# }

# ssl/plaintext: do not use these settings in production;
# cleartext logins should NEVER be used without ssl.
ssl = no
auth_allow_cleartext = yes

# ssl_server_cert_file = /etc/dovecot/ssl-cert.pem
# ssl_server_key_file = /etc/dovecot/ssl-key.pem

# default domain 
auth_default_domain = example.com

# logging: add lots of logging
auth_verbose = yes
auth_debug = yes
log_debug = category=mail
log_path = /dev/stderr
info_log_path = /dev/stderr 
debug_log_path = /dev/stderr

# authdb/userdb both use the same passwd_file in this configuration.
# See https://doc.dovecot.org/2.4.1/core/config/auth/databases/passwd_file.html

# user@domain name check first
userdb passwd-file2 {
 driver = passwd-file
 auth_username_format=%{user|lower}
 passwd_file_path = /etc/dovecot/users2.db
 # don't continue if found
 userdb_result_success = return-ok
}

# user database by domain, default example.com; fail if not found
userdb passwd-file {
 driver = passwd-file
 auth_username_format=%{user|lower}
 passwd_file_path = /etc/dovecot/users.db
 userdb_result_failure = return-fail
}

# user@domain name check first
passdb passwd-file2 {
 driver = passwd-file
 auth_username_format=%{user|lower}
 passwd_file_path = /etc/dovecot/users2.db
 # don't continue if found
 userdb_result_success = return-ok
}

# password database by domain, default example.com; fail if not found
passdb passwd-file {
 driver = passwd-file
 auth_username_format=%{user|lower}
 passwd_file_path = /etc/dovecot/users.db
 userdb_result_failure = return-fail
}
